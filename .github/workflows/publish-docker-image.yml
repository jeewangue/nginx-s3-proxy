# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json
name: Publish Docker Image

on:
  push:
    branches:
      - "master"
      - "main"
      - "develop"
      - "feature/*"
      - "release/*"
      - "hotfix/*"
      - "support/*"
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  pull_request:

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        env:
          DOCKER_IMAGES: "docker.io/${{ github.repository }}"
        run: |
          case $GITHUB_REF in
            refs/tags/*)  VERSION=${GITHUB_REF#refs/tags/};;
            refs/heads/*) VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g');;
            refs/pull/*)  VERSION=pr-${{ github.event.number }};;
            *)            VERSION=sha-${GITHUB_SHA::7};;
          esac
          TAGS=()
          for image in $DOCKER_IMAGES; do
            TAGS+=("${image}:${GITHUB_SHA::7}")
            TAGS+=("${image}:${VERSION}")
            if [[ "${{ github.event.repository.default_branch }}" == "$VERSION" ]]; then
              TAGS+=("${image}:latest")
            fi
          done
          echo "version=${VERSION}"                     >> $GITHUB_OUTPUT
          echo "tags=$(IFS=,; echo "${TAGS[*]}")"       >> $GITHUB_OUTPUT
          echo "commit_hash=${GITHUB_SHA::7}"           >> $GITHUB_OUTPUT
          echo "build_date=$(git show -s --format=%cI)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: github.event_name == 'push'

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            COMMIT_HASH=${{ steps.meta.outputs.commit_hash }}
            BUILD_DATE=${{ steps.meta.outputs.build_date }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            org.opencontainers.image.created=${{ steps.meta.outputs.build_date }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: user/app
        if: github.ref_name == github.event.repository.default_branch
